/*
 *  FILE: modbus_port.c
 *
 *  Created on: 2020/2/19
 *
 *         Author: aron66
 *
 *  DESCRIPTION:--
 */
#ifdef __cplusplus //use C compiler
extern "C" {
#endif
#include "modbus_port.h" 

uint8_t UART1_BUFF[256] = {0};
uint8_t UART2_BUFF[256] = {0};
uint8_t UART3_BUFF[256] = {0};
uint8_t UART4_BUFF[256] = {0};
uint8_t UART5_BUFF[256] = {0};
uint8_t UART6_BUFF[256] = {0};


circular_buffer *cb_create(char *path,unsigned long order)
{
	circular_buffer *cb = (circular_buffer *)malloc(sizeof(circular_buffer));//分配一个新的内存空间。cb_struct_pointer
	if (NULL == cb)
	{
		return NULL;
	}
	order = (order <= 11 ? order : 11);
	cb->count = 1UL << order;
	cb->read_offset = 0;
	cb->write_offset = 0;
	//the buff never release!
	cb->ptr = (uint8_t *)malloc(sizeof(uint8_t)*cb->count);
	return cb;
}

/*
 * 串口参数设置
 * */
volatile uint16_t uart_mode = REC_NOT_THROUGH_MODE;//配置独立模式    

void init_modbus_controlBlock(void)
{
    /*打开串口*/
    __HAL_UART_ENABLE_IT(&huart1,UART_IT_IDLE);   //打开空闲中断
    HAL_UART_Receive_DMA(&huart1, (uint8_t*)UART1_BUFF, UART1_BUFF_MAX);

}
/*移植ms延时*/    
void modbusDelay(uint32_t Delayms) 
{
    osDelay(Delayms);
}

int ModbusUsart_tx(UART_HandleTypeDef *fd,unsigned char* msg , int len)
{

}
#ifdef __cplusplus //end extern c
}
#endif